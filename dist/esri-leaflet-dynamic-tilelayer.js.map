{"version":3,"file":"esri-leaflet-dynamic-tilelayer.js","sources":["../src/Layers/DynamicMapLayer/TiledDynamicMapLayer.js"],"names":["EsriLeaflet","Layers","TiledDynamicMapLayer","L","TileLayer","extend","options","Util","DynamicMapLayer","prototype","redrawBuffer","_requests","initialize","url","call","this","onAdd","map","crs","code","sr","split","bboxSR","imageSR","on","_onZoomChange","onRemove","off","setLayers","layers","redraw","setLayerDefs","layerDefs","setTimeOptions","timeOptions","e","_zooming","type","_buildExportParams","bounds","size","ne","_map","project","_northEast","sw","_southWest","top","latLngToLayerPoint","bottom","y","params","bbox","x","join","dpi","format","transparent","JSON","stringify","from","to","time","valueOf","_service","token","_loadTile","tile","tilePoint","_layer","onload","_tileOnLoad","onerror","_tileOnError","_adjustTilePoint","getTileUrl","err","src","fire","callback","tileSize","nwPoint","multiplyBy","sePoint","add","LatLngBounds","unproject","z","Point","_requestExport","f","push","get","error","response","href","getParamString","front","_tileContainer","_clearBgBuffer","_bgBuffer","_tiles","_tilesToLoad","_tilesTotal","_reset","hard","_update","_animatingZoom","methods","i","len","length","tiledDynamicMapLayer"],"mappings":"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","sourcesContent":["EsriLeaflet.Layers.TiledDynamicMapLayer = L.TileLayer.extend({\n\n  options: L.Util.extend({},\n    EsriLeaflet.Layers.DynamicMapLayer.prototype.options, {\n      redrawBuffer: true\n    }),\n\n  _requests: [],\n\n  /**\n   * @constructor\n   * @extends {L.TileLayer}\n   * @param  {String} url\n   * @param  {Object} options\n   */\n  initialize: function(url, options) {\n    L.TileLayer.prototype.initialize.call(this, url, options);\n    EsriLeaflet.DynamicMapLayer.prototype.initialize.call(this, url, options);\n  },\n\n  /**\n   * @param  {L.Map} map\n   */\n  onAdd: function(map) {\n    if (map.options.crs && map.options.crs.code) {\n      var sr = map.options.crs.code.split(':')[1];\n      this.options.bboxSR = sr;\n      this.options.imageSR = sr;\n    }\n\n    map.on('zoomstart zoomend', this._onZoomChange, this);\n    return L.TileLayer.prototype.onAdd.call(this, map);\n  },\n\n  /**\n   * @param  {L.Map} map\n   */\n  onRemove: function(map) {\n    map.off('zoomstart zoomend', this._onZoomChange, this);\n    L.TileLayer.prototype.onRemove.call(this, map);\n    EsriLeaflet.DynamicMapLayer.prototype.onRemove.call(this, map);\n  },\n\n  /**\n   * @param {Array.<Number>|Array.<String>} layers\n   * @return {L.esri.Layers.TiledDynamicMapLayer} self\n   */\n  setLayers: function(layers) {\n    EsriLeaflet.Layers.DynamicMapLayer.prototype.setLayers.call(this, layers);\n    return this.redraw();\n  },\n\n  /**\n   * @param {Array.<Object>} layerDefs\n   * @return {L.esri.Layers.TiledDynamicMapLayer} self\n   */\n  setLayerDefs: function(layerDefs) {\n    EsriLeaflet.Layers.DynamicMapLayer.prototype.setLayerDefs.call(this, layerDefs);\n    return this.redraw();\n  },\n\n  /**\n   * @param {Object} timeOptions\n   * @return {L.esri.Layers.TiledDynamicMapLayer} self\n   */\n  setTimeOptions: function(timeOptions) {\n    EsriLeaflet.Layers.DynamicMapLayer.prototype.setTimeOptions.call(this, timeOptions);\n    return this.redraw();\n  },\n\n  /**\n   * Set/unset zooming flag to avoid unneeded requests\n   * @param  {Object} e\n   */\n  _onZoomChange: function(e) {\n    this._zooming = (e.type === 'zoomstart');\n  },\n\n  /**\n   * @param  {L.LatLngBounds} bounds\n   * @param  {L.Point}        size\n   * @return {Object}\n   */\n  _buildExportParams: function(bounds, size) {\n    var ne = this._map.options.crs.project(bounds._northEast);\n    var sw = this._map.options.crs.project(bounds._southWest);\n\n    //ensure that we don't ask ArcGIS Server for a taller image than we have actual map displaying\n    var top = this._map.latLngToLayerPoint(bounds._northEast);\n    var bottom = this._map.latLngToLayerPoint(bounds._southWest);\n\n    if (top.y > 0 || bottom.y < size.y) {\n      size.y = bottom.y - top.y;\n    }\n\n    var params = {\n      bbox: [sw.x, sw.y, ne.x, ne.y].join(','),\n      size: size.x + ',' + size.y,\n      dpi: 96,\n      format: this.options.format,\n      transparent: this.options.transparent,\n      bboxSR: this.options.bboxSR,\n      imageSR: this.options.imageSR\n    };\n\n    if (this.options.layers) {\n      params.layers = 'show:' + this.options.layers.join(',');\n    }\n\n    if (this.options.layerDefs) {\n      params.layerDefs = JSON.stringify(this.options.layerDefs);\n    }\n\n    if (this.options.timeOptions) {\n      params.timeOptions = JSON.stringify(this.options.timeOptions);\n    }\n\n    if (this.options.from && this.options.to) {\n      params.time = this.options.from.valueOf() + ',' + this.options.to.valueOf();\n    }\n\n    if (this._service.options.token) {\n      params.token = this._service.options.token;\n    }\n\n    return params;\n  },\n\n  /**\n   * @param  {Object}  tile\n   * @param  {L.Point} tilePoint\n   */\n  _loadTile: function(tile, tilePoint) {\n    tile._layer = this;\n    tile.onload = this._tileOnLoad;\n    tile.onerror = this._tileOnError;\n\n    this._adjustTilePoint(tilePoint);\n    this.getTileUrl(tilePoint, function(err, url) {\n      tile.src = url;\n    });\n\n    this.fire('tileloadstart', {\n      tile: tile\n    });\n  },\n\n  /**\n   * Async request tile url\n   * @param  {L.Point}  tilePoint\n   * @param  {Function} callback\n   */\n  getTileUrl: function(tilePoint, callback) { // (Point, Number) -> String\n    var map = this._map,\n      tileSize = this.options.tileSize,\n\n      nwPoint = tilePoint.multiplyBy(tileSize),\n      sePoint = nwPoint.add([tileSize, tileSize]);\n\n    var bounds = new L.LatLngBounds(map.unproject(nwPoint, tilePoint.z),\n      map.unproject(sePoint, tilePoint.z));\n    var size = new L.Point(this.options.tileSize, this.options.tileSize);\n\n    var params = this._buildExportParams(bounds, size);\n    this._requestExport(params, bounds, callback);\n  },\n\n  /**\n   * Export call, json or image straight awy\n   * @param  {Object}          params\n   * @param  {L.LatLngBounds}  bounds\n   * @param  {Function}        callback\n   */\n  _requestExport: function(params, bounds, callback) {\n    if (this.options.f === 'json') {\n      this._requests.push(this._service.get('export', params, function(error, response) {\n        callback(null, response.href, bounds);\n      }, this));\n    } else {\n      params.f = 'image';\n      callback(null, this.options.url + 'export' + L.Util.getParamString(params), bounds);\n    }\n  },\n\n  redraw: function() {\n    if (this._map) {\n      if (this.options.redrawBuffer) {\n        var front = this._tileContainer;\n        this._clearBgBuffer();\n        this._tileContainer = this._bgBuffer;\n        this._bgBuffer = front;\n        this._tiles = {};\n        this._tilesToLoad = 0;\n        this._tilesTotal = 0;\n      } else {\n        this._reset({\n          hard: true\n        });\n      }\n\n      this._update();\n    }\n    return this;\n  },\n\n  /**\n   * Bounds or params changed\n   */\n  _update: function() {\n    if (this._map && this._map._animatingZoom) {\n      return;\n    }\n    L.TileLayer.prototype._update.call(this);\n  }\n\n});\n\n(function(methods) {\n  for (var i = 0, len = methods.length; i < len; i++) {\n    EsriLeaflet.Layers.TiledDynamicMapLayer.prototype[methods[i]] =\n      EsriLeaflet.Layers.DynamicMapLayer.prototype[methods[i]];\n  }\n})([\n  /** @borrows L.esri.Layers.DynamicMapLayer.prototype.getLayers as getLayers */\n  'getLayers',\n  /** @borrows L.esri.Layers.DynamicMapLayer.prototype.getLayerDefs as getLayerDefs */\n  'getLayerDefs',\n  /** @borrows L.esri.Layers.DynamicMapLayer.prototype.getTimeOptions as getTimeOptions */\n  'getTimeOptions',\n  /** @borrows L.esri.Layers.DynamicMapLayer.prototype.metadata as metadata */\n  'metadata',\n  /** @borrows L.esri.Layers.DynamicMapLayer.prototype.query as query */\n  'query',\n  /** @borrows L.esri.Layers.DynamicMapLayer.prototype.identify as identify */\n  'identify',\n  /** @borrows L.esri.Layers.DynamicMapLayer.prototype.find as find */\n  'find',\n  /** @borrows L.esri.Layers.DynamicMapLayer.prototype._getPopupData as _getPopupData */\n  '_getPopupData',\n  /** @borrows L.esri.Layers.DynamicMapLayer.prototype._propagateEvent as _propagateEvent */\n  '_propagateEvent'\n]);\n\n// factory\nEsriLeaflet.tiledDynamicMapLayer =\nEsriLeaflet.Layers.tiledDynamicMapLayer = function(url, options) {\n  return new EsriLeaflet.Layers.TiledDynamicMapLayer(url, options);\n};\n"]}